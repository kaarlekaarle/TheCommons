version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/commons_db
      - REDIS_URL=redis://redis:6379/0
      - TEST_REDIS_URL=redis://redis:6379/1
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=False
      - ALLOWED_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000"]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=commons_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  loadtest:
    build: .
    command: locust -f tests/load_test.py --host http://web:8000
    ports:
      - "8089:8089"
    depends_on:
      - web
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/commons_db
      - REDIS_URL=redis://redis:6379/0
      - TEST_REDIS_URL=redis://redis:6379/1
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=False
      - ALLOWED_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000"]

volumes:
  postgres_data:
  redis_data: